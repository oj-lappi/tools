#!/bin/bash

#IGNORE THIS, JUST USE MAKE.

print_usage(){
cat << EOF
Usage: pdf_watch [-o PDF_OUTPUT] -s LATEX_SOURCE [--] FILES...

When FILES or LATEX_INPUT changes, compile LATEX_INPUT to PDF_OUTPUT with pdflatex.
EOF
}



#Parse arguments
runopt=`getopt -n $0 -o s:o:h? -l help,source:,src:,output: -- "$@"`
if [ $? != 0 ] ; then echo "Exiting" >&2 ; exit 1 ; fi
eval set -- "$runopt"


while true;do
case "$1" in

	-h|--help|?)
		print_usage
		exit 0
		;;

	-s|--source|--src)
		if [ $source_given ];then
			echo "Please provide one source file only" >&2 ; exit 1 ;
		fi
		source_given=true
		source="$2"
		shift
		;;
	-o|--output)
		if [ $output_given ];then
			echo "Please provide no more than one output file" >&2 ; exit 1 ;
		fi
		output_given=true
		output="$2"
		shift
		;;
	-- ) shift; break ;;
	* ) break ;;
esac
shift
done

if [ -z $source_given ];then
print_usage
exit 0
fi

#Begin watching
#TODO:add flag to skip this part
echo "Ensuring latex packages are linked"
sudo mktexlsr                    

#Split source and output arguments at period
#TODO:assumes only one period in filename
old_ifs=$IFS
IFS='.';
read source_name source_ext <<< $source
read output_name output_ext <<< $output
IFS=$old_ifs
pdflatex_output=$source_name


if [ $output_ext ]
then
	case $output_ext in
		pdf)
		;;
		dvi)
		;;
		*)
			output=${output}.pdf
		;;
	esac
else
	output=${output}.pdf
fi

files=$@

#script=$(sed -e "s/\$source/$source/g;s/\$pdflatex_output/$pdflatex_output/g" <<'EOF'
#echo "Compiling pdf from $source"
#pdflatex -interaction batchmode -- $source
#if [ $? != 0 ] ; then echo "Errors" ; ; fi
#echo "Removing pdflatex garbage"
#rm $pdflatex_output.{aux,log,out}
#EOF
#)

script=$(cat <<EOF
echo "Compiling pdf from $source\n"
#Run  pdflatex twice, to update references
pdflatex -file-line-error -interaction batchmode -- $source
pdflatex -file-line-error -interaction batchmode -- $source
echo ""
if [ \$? != 0 ] ; then 
echo "Errors:"
grep  ".\{1,\}:[0-9]\{1,\}:" $pdflatex_output.log
echo "Removing pdflatex garbage {aux,out}"
rm $pdflatex_output.{aux,out}
else
grep  ".\{1,\}:[0-9]\{1,\}:" $pdflatex_output.log
echo "Removing pdflatex garbage {aux,log,out}"
#rm $pdflatex_output.{aux,log,out}
fi
EOF
)
echo "Writing to $pdflatex_output.pdf"
ls -- $source $files| entr -sr "$script" 
